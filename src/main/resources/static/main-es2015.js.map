{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/ecommerce/billing/billing.component.html","webpack:///./src/app/ecommerce/ecommerce.component.html","webpack:///./src/app/ecommerce/orders/orders.component.html","webpack:///./src/app/ecommerce/payment/payment.component.html","webpack:///./src/app/ecommerce/products/products.component.html","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///./src/app/ecommerce/stepper/stepper.component.html","webpack:///./src/app/ecommerce/success/success.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ecommerce/billing/billing.component.css","webpack:///./src/app/ecommerce/billing/billing.component.ts","webpack:///./src/app/ecommerce/ecommerce.component.css","webpack:///./src/app/ecommerce/ecommerce.component.ts","webpack:///./src/app/ecommerce/models/product-order.model.ts","webpack:///./src/app/ecommerce/models/product-orders.model.ts","webpack:///./src/app/ecommerce/models/product.model.ts","webpack:///./src/app/ecommerce/orders/orders.component.css","webpack:///./src/app/ecommerce/orders/orders.component.ts","webpack:///./src/app/ecommerce/payment/payment.component.css","webpack:///./src/app/ecommerce/payment/payment.component.ts","webpack:///./src/app/ecommerce/products/products.component.css","webpack:///./src/app/ecommerce/products/products.component.ts","webpack:///./src/app/ecommerce/services/EcommerceService.ts","webpack:///./src/app/ecommerce/services/StepperService.ts","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.css","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/ecommerce/stepper/stepper.component.css","webpack:///./src/app/ecommerce/stepper/stepper.component.ts","webpack:///./src/app/ecommerce/success/success.component.css","webpack:///./src/app/ecommerce/success/success.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,0H;;;;;;;;;;;ACAA,itD;;;;;;;;;;;ACAA,6pB;;;;;;;;;;;ACAA,8HAA8H,sBAAsB,MAAM,uBAAuB,KAAK,iBAAiB,iEAAiE,SAAS,4vBAA4vB,0BAA0B,yIAAyI,kBAAkB,KAAK,sBAAsB,sIAAsI,qCAAqC,cAAc,4HAA4H,uCAAuC,wBAAwB,mLAAmL,wCAAwC,mFAAmF,uBAAuB,uXAAuX,SAAS,2C;;;;;;;;;;;ACAtxE,+gBAA+gB,kEAAkE,uNAAuN,kEAAkE,0NAA0N,kEAAkE,2SAA2S,wEAAwE,qMAAqM,+DAA+D,gPAAgP,wEAAwE,icAAic,4DAA4D,+IAA+I,iLAAiL,oFAAoF,4FAA4F,eAAe,sBAAsB,gBAAgB,gTAAgT,6BAA6B,oJAAoJ,wBAAwB,szB;;;;;;;;;;;ACAhlH,6NAA6N,oBAAoB,8GAA8G,0BAA0B,oDAAoD,qBAAqB,4oCAA4oC,0BAA0B,yLAAyL,sBAAsB,iLAAiL,uBAAuB,8MAA8M,6BAA6B,uKAAuK,oBAAoB,iGAAiG,uBAAuB,kGAAkG,wBAAwB,4IAA4I,s2BAAs2B,kIAAkI,8hBAA8hB,yVAAyV,0BAA0B,sYAAsY,0BAA0B,sYAAsY,0BAA0B,ifAAif,iIAAiI,yCAAyC,0BAA0B,yqBAAyqB,6V;;;;;;;;;;;ACA1zN,8FAA8F,uLAAuL,OAAO,2KAA2K,sBAAsB,KAAK,iBAAiB,+TAA+T,2vBAA2vB,0BAA0B,8JAA8J,sBAAsB,2JAA2J,+CAA+C,cAAc,0JAA0J,iDAAiD,wBAAwB,0LAA0L,iBAAiB,yJAAyJ,wCAAwC,6FAA6F,uBAAuB,2PAA2P,qBAAqB,0RAA0R,OAAO,4Y;;;;;;;;;;;ACAvuG,oEAAoE,8SAA8S,iCAAiC,2EAA2E,sCAAsC,qTAAqT,iCAAiC,2EAA2E,sCAAsC,mRAAmR,iCAAiC,2EAA2E,sCAAsC,4H;;;;;;;;;;;ACAh3C,iQAAiQ,uTAAuT,mBAAmB,6FAA6F,gBAAgB,wFAAwF,gK;;;;;;;;;;;ACAhxB,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AACjB;AACyB;AACV;AACC;AAEV;AACsB;AACO;AACc;AACpB;AACG;AACE;AACA;AAE5B;AAC4B;AACJ;AACI;AAEzE,MAAM,SAAS,GAAW;IACtB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iFAAkB;KAC9B;CACJ,CAAC;AA6BF,IAAa,SAAS,GAAtB,MAAa,SAAS;CACrB;AADY,SAAS;IA1BrB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,2DAAY;YACZ,iFAAkB;YAClB,wFAAiB;YACjB,sGAAqB;YACrB,mFAAe;YACf,sFAAgB;YAChB,sFAAgB;YAChB,sFAAgB;YAChB,sFAAgB;SACnB;QACD,OAAO,EAAE;YACL,uEAAa;YACb,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,OAAO,CAChB,SAAS,EACT,EAAE,aAAa,EAAE,KAAK,EAAE,CAC3B;YACD,2DAAe,CAAC,QAAQ,CAAC,4CAA4C,CAAC;SACzE;QACD,SAAS,EAAE,CAAC,sFAAgB,EAAE,kFAAc,CAAC;QAC7C,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC5B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;;ACtDtB,+DAA+D,2J;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iKAAuC;;KAExC,CAAC;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;ACP7B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;ACAyB;AAIzB;AAEJ;AAO3D,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAqC7B,YAAoB,gBAAkC,EAAU,cAA8B;QAA1E,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAnCtF,cAAS,GAAG,IAAI,CAAC;QACzB,kBAAa,GAAG,KAAK,CAAC;IAkC4E,CAAC;IApBnG,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,aAAsB;QAChC,sCAAsC;QACtC,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,aAAa,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAEzD,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;IAC5B,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,EAAE;YACnE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QAEb,mEAAmE;QACnE,gEAAgE;QAChE,oDAAoD;QACpD,8FAA8F;QAC9F,MAAM;IACR,CAAC;CAIF;;YAnBuC,2EAAgB;YAA0B,uEAAc;;AA9B9F;IADC,+DAAS,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;qDACzB;AAG7B;IADC,+DAAS,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;yDACrB;AAEsB;IAA1D,+DAAS,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;0DAA4B;AAGtF;IADC,+DAAS,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;mDAC3B;AAfd,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6JAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAwD9B;AAxD8B;;;;;;;;;;;;;ACb/B;AAAA;AAAA;AAA0C;AAEnC,MAAM,YAAY;IAKrB,YAAY,OAAgB,EAAE,QAAgB,EAAE,IAAY;QACxD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;;;YAJoB,sDAAO;;;;;;;;;;;;;;;;ACLhC;AAAA;AAAO,MAAM,aAAa;IAA1B;QACI,kBAAa,GAAmB,EAAE,CAAC;IACvC,CAAC;CAAA;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,OAAO;IAOhB,YAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,UAAkB,EAAE,QAAgB;QACrF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;;;;;;;;;;;;;;;;;;;;ACbL,+DAA+D,2J;;;;;;;;;;;;;;;;;;ACAf;AAGc;AAO9D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAMxB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;IACtD,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QACtD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,GAAG;QACC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,4DAA4D;IAChE,CAAC;IAED,SAAS;QACL,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YACzD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YAtByC,2EAAgB;;AAN7C,eAAe;IAL3B,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,8JAAsC;;KAEzC,CAAC;GACW,eAAe,CA4B3B;AA5B2B;;;;;;;;;;;;ACV5B,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACAuD;AACL;AAChC;AACrB;AACI;AAOhE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAsB3B,YAAoB,EAAe,EACzB,aAA4B,EAC5B,cAA8B,EAC9B,gBAAkC;QAHxB,OAAE,GAAF,EAAE,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAZ5C,iBAAY,GAAY,KAAK,CAAC;QAC9B,YAAO,GAAY,KAAK,CAAC;QAMzB,oBAAe,GAAY,KAAK,CAAC;IAKe,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAExD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;oBACvC,cAAc,EAAE,IAAI;oBACpB,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,SAAS;4BAChB,UAAU,EAAE,MAAM;4BAClB,UAAU,EAAE,GAAG;4BACf,UAAU,EAAE,yCAAyC;4BACrD,QAAQ,EAAE,MAAM;4BAChB,eAAe,EAAE;gCACf,KAAK,EAAE,SAAS;6BACjB;yBACF;qBACF;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;IAEX,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;YACxC,OAAO;SACR;QACD,8DAA8D;QAC9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;QAE7B,6BAA6B;QAC7B,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QAC3F,MAAM,SAAS,GAAmB;YAChC,IAAI;YACJ,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;YACnD,aAAa,EAAE,EAAE;YACjB,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YAC/C,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;YAC7C,eAAe,EAAE,EAAE;SACpB,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtE,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACvC;YACD,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5D,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YACnF,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YAClF,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YAC/E,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;YACnF,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC7E,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;YACnF,aAAa;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;YAE3E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAE/C,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YACjF,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACb,aAAa;gBACb,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC9B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QAClC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;SAC9B;IACH,CAAC;CAEF;;YA9HyB,0DAAW;YACV,wDAAa;YACZ,uEAAc;YACZ,2EAAgB;;AAzBjC,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iKAAuC;;KAExC,CAAC;GACW,gBAAgB,CAoJ5B;AApJ4B;;;;;;;;;;;;ACX7B,8BAA8B,yBAAyB,wBAAwB,KAAK,2BAA2B,yCAAyC,yBAAyB,2BAA2B,sBAAsB,2BAA2B,KAAK,+CAA+C,+sB;;;;;;;;;;;;;;;;;;;ACAnM;AACjD;AAIG;AAQhE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAgB5B,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAdtD,kBAAa,GAAmB,EAAE,CAAC;QACnC,aAAQ,GAAc,EAAE,CAAC;QAIzB,oBAAe,GAAY,KAAK,CAAC;QAEjC,cAAS,GAAY,KAAK,CAAC;QAQzB,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,SAAS,CAAC,KAAmB;QAC3B,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,EAAE;YACxB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;SACpB;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;YAC9D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO;SACR;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAClE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;QAED,4FAA4F;IAC9F,CAAC;IAED,gBAAgB,CAAC,KAAmB;QAClC,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACnD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;QACvE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,eAAe,CAAC,KAAmB;QACjC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;aACrF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,YAA0B;QACvC,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7F;QACD,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC9D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,eAAe,CAAC,OAAgB;QAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;IACzG,CAAC;IAED,iBAAiB,CAAC,OAAgB;QAChC,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAC9C,CAAC,QAAe,EAAE,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,wEAAY,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC;QACJ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,OAAY;QACjB,OAAO,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,uBAAuB,CAAC,KAAmB;QACzC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACrG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC/C;IACH,CAAC;IAEO,cAAc,CAAC,QAAwB;QAC7C,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACvB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;CAEF;;YA7HuC,2EAAgB;;AAJ5C;IAAT,4DAAM,EAAE;0DAAwC;AAEQ;IAAxD,+DAAS,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sDAAyB;AAdtE,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,oKAAwC;;KAEzC,CAAC;GACW,iBAAiB,CA6I7B;AA7I6B;;;;;;;;;;;;;;;;;;;;;;ACZiC;AAEf;AACE;AACP;AAG3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAuBzB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QArB3B,gBAAW,GAAG,eAAe,CAAC;QAC9B,cAAS,GAAG,aAAa,CAAC;QAG1B,WAAM,GAAiB,IAAI,0EAAa,EAAE,CAAC;QAE3C,wBAAmB,GAAG,IAAI,6DAAO,EAAE,CAAC;QACpC,kBAAa,GAAG,IAAI,6DAAO,EAAE,CAAC;QAC9B,iBAAY,GAAG,IAAI,6DAAO,EAAE,CAAC;QAC7B,yBAAoB,GAAG,IAAI,6DAAO,EAAE,CAAC;QAI7C,kDAAkD;QAC1C,kBAAa,GAAW,KAAK,CAAC;QAEtC,wBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAC9D,kBAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClD,iBAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAChD,yBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAIhE,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS,CAAC,KAAoB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IAC7D,CAAC;IAED,IAAI,oBAAoB,CAAC,KAAmB;QACxC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;IAED,IAAI,oBAAoB;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa,CAAC,KAAoB;QAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,IAAI,KAAK,CAAC,KAAa;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa,CAAC,KAAc;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;CACJ;;YAhD4B,+DAAU;;AAvB1B,gBAAgB;IAD5B,gEAAU,EAAE;GACA,gBAAgB,CAuE5B;AAvE4B;;;;;;;;;;;;;;;;;;;ACRc;AACZ;AAG/B,IAAa,cAAc,GAA3B,MAAa,cAAc;IAD3B;QAGY,SAAI,GAAU,CAAC,CAAC;QAChB,oBAAe,GAAW,KAAK,CAAC;QAChC,iBAAY,GAAW,KAAK,CAAC;QAE7B,gBAAW,GAAG,IAAI,4CAAO,EAAE,CAAC;QAC5B,wBAAmB,GAAG,IAAI,4CAAO,EAAE,CAAC;QAE5C,gBAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC9C,wBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAe9D,kBAAkB;QAClB,gCAAgC;QAChC,IAAI;IAER,CAAC;IAjBG,IAAI,IAAI,CAAC,IAAY;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,aAAa;QACT,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;CAMJ;AA7BY,cAAc;IAD1B,gEAAU,EAAE;GACA,cAAc,CA6B1B;AA7B0B;;;;;;;;;;;;ACJ3B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;ACAqB;AACrB;AAGlB;AACmB;AACH;AAO7D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAQhC,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACpD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,0EAAa,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,gCAAgC;QAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5D,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChE,OAAO;aACR;iBAAM;gBACL,UAAU,CAAC,GAAG,EAAE;oBACd,MAAM,CAAC,QAAQ,CAAC;wBACd,GAAG,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC;wBAC3B,IAAI,EAAE,CAAC;wBACP,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;gBACL,CAAC,EAAE,GAAG,CAAC;aACR;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,cAAc,CAAC,QAAwB;QAC7C,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACvB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,SAAS;QACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5D,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,EAAE;YAClE,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;YAC9D,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,wEAAY,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;aAClH;YACD,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;YAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,KAAmB;QAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpE;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAE9D,CAAC;IAED,eAAe,CAAC,OAAgB;QAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;IACzG,CAAC;IAGC,KAAK;QACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,0EAAa,EAAE,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;CACJ;;YA5FuC,2EAAgB;;AAF5C;IAAT,4DAAM,EAAE;8DAAwC;AANtC,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,mLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAoGjC;AApGiC;;;;;;;;;;;;ACblC,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAb;AACU;AAEI;AAOhE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAS3B,YAAoB,cAA6B,EAAU,gBAAiC;QAAxE,mBAAc,GAAd,cAAc,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAI,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE;YACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACrC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,KAAK,CAAC;SAC7C;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;SAC9B;IACH,CAAC;CAGF;;YAlCoC,uEAAc;YAA2B,2EAAgB;;AATjF,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iKAAuC;;KAExC,CAAC;GACW,gBAAgB,CA2C5B;AA3C4B;;;;;;;;;;;;ACV7B,+DAA+D,2J;;;;;;;;;;;;;;;;;ACAN;AAOzD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAI3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,OAAO;QACL,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;CAEF;AAXU;IAAR,2DAAK,EAAE;mDAAgB;AAFb,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iKAAuC;;KAExC,CAAC;GACW,gBAAgB,CAa5B;AAb4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <app-stepper></app-stepper>\\n  <app-ecommerce></app-ecommerce>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <header class=\\\"card-header\\\">\\n    <h4 class=\\\"card-title mt-2\\\">Billing</h4>\\n  </header>\\n  <article class=\\\"card-body\\\">\\n    <form>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col form-group\\\">\\n          <label>First name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"col form-group\\\">\\n          <label>Last name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n            <small class=\\\"form-text text-muted\\\">You will receive a confirmation email.</small>\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Address</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>City</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Country</label>\\n          <select id=\\\"inputState\\\" class=\\\"form-control\\\">\\n            <option>Canada</option>\\n            <option>Hong Kong</option>\\n            <option selected=\\\"\\\">Ireland</option>\\n            <option>Japan</option>\\n            <option>United States</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n            <label>Zip/Postal Code</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n    </form>\\n  </article>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\" [hidden]=\\\"orderFinished\\\">\\n  <h2 class=\\\"title-doc\\\">Limited Offers</h2>\\n  <div class=\\\"col-md-12\\\">\\n    <app-products #productsC (onOrderFinished)=finishOrder($event)></app-products>\\n  </div>\\n  <div class=\\\"col-md-12\\\">\\n    <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC></app-shopping-cart>\\n  </div>\\n</div>\\n<div [hidden]=\\\"!orderFinished\\\">\\n  <h2 class=\\\"title-doc\\\">Secure Checkout</h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-payment></app-payment>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <app-orders #ordersC></app-orders>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"<!-- <h2 class=\\\"text-center\\\">ORDER</h2>\\n<ul>\\n  <li *ngFor=\\\"let order of orders.productOrders\\\">\\n    {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\\n  </li>\\n</ul>\\n<h3 class=\\\"text-right\\\">Total amount: ${{ total }}</h3>\\n\\n<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"pay()\\\" *ngIf=\\\"!paid\\\">Pay</button>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"paid\\\">\\n  <strong>Congratulation!</strong> You successfully made the order.\\n</div> -->\\n\\n<div class=\\\"card\\\">\\n  <header class=\\\"card-header\\\">\\n    <h4 class=\\\"card-title mt-2\\\">Order Summary</h4>\\n  </header>\\n  <table class=\\\"table table-hover shopping-cart-wrap\\\">\\n    <thead class=\\\"text-muted\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Product</th>\\n        <th scope=\\\"col\\\" width=\\\"0\\\">Price</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let order of orders.productOrders\\\">\\n        <td>\\n          <figure class=\\\"media\\\">\\n            <div class=\\\"img-wrap\\\"><img src={{order.product.pictureUrl}} class=\\\"img-thumbnail img-sm\\\"></div>\\n            <figcaption class=\\\"media-body\\\">\\n              <h6 class=\\\"title text-truncate\\\">{{ order.quantity }} × {{ order.product.name }}</h6>\\n              <dl class=\\\"dlist-inline small\\\" *ngIf=\\\"order.size !== 'N/A'\\\">\\n                <dt style=\\\"padding-right: 5px;\\\">Size:</dt>\\n                <dd>{{ order.size }}</dd>\\n              </dl>\\n              <dl class=\\\"dlist-inline small\\\">\\n                <dt style=\\\"padding-right: 5px;\\\">Colour:</dt>\\n                <dd>{{ order.product.colour }}</dd>\\n              </dl>\\n            </figcaption>\\n          </figure>\\n        </td>\\n        <td>\\n          <div class=\\\"price-wrap\\\">\\n            <var class=\\\"price\\\">€{{ order.product.price * order.quantity }}</var>\\n            <small class=\\\"text-muted\\\" *ngIf=\\\"(order.quantity > 1)\\\">(€{{ order.product.price }} each)</small>\\n          </div> <!-- price-wrap .// -->\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <div class=\\\"box\\\">\\n        <dl class=\\\"dlist-align\\\">\\n          <dt>Delivery</dt>\\n          <dd class=\\\"text-right\\\">Free</dd>\\n        </dl>\\n        <dl class=\\\"dlist-align\\\">\\n          <dt>Payment Total </dt>\\n          <dd class=\\\"text-right h5 b\\\">€{{ total }}</dd>\\n        </dl>\\n    </div>\\n</div>\\n\"","module.exports = \"<form role=\\\"form\\\" [formGroup]=\\\"stripeTest\\\" (ngSubmit)=\\\"checkout()\\\" *ngIf=\\\"!paymentFinished\\\">\\n  <!-- Billing -->\\n  <div class=\\\"card\\\">\\n    <header class=\\\"card-header\\\">\\n      <h4 class=\\\"card-title mt-2\\\">Billing</h4>\\n    </header>\\n    <article class=\\\"card-body\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"col form-group\\\">\\n            <label>First name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fname\\\" placeholder=\\\"\\\" [ngClass]=\\\"{'is-invalid' : (fname.invalid && (fname.dirty || fname.touched)) }\\\">\\n          </div>\\n          <div class=\\\"col form-group\\\">\\n            <label>Last name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lname\\\" placeholder=\\\"\\\" [ngClass]=\\\"{'is-invalid' : (lname.invalid && (lname.dirty || lname.touched)) }\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"\\\" [ngClass]=\\\"{'is-invalid' : (email.invalid && (email.dirty || email.touched)) }\\\">\\n          <small class=\\\"form-text text-muted\\\">You will receive a confirmation email.</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"\\\" [ngClass]=\\\"{'is-invalid' : (address.invalid && (address.dirty || address.touched)) }\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>City</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"\\\" [ngClass]=\\\"{'is-invalid' : (city.invalid && (city.dirty || city.touched)) }\\\">\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Country</label>\\n            <select id=\\\"inputState\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\" [ngClass]=\\\"{'is-invalid' : (country.invalid && (country.dirty || country.touched)) }\\\">\\n              <option>Canada</option>\\n              <option>Hong Kong</option>\\n              <option selected=\\\"\\\">Ireland</option>\\n              <option>Japan</option>\\n              <option>United States</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Zip/Postal Code</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip\\\" [ngClass]=\\\"{'is-invalid' : (zip.invalid && (zip.dirty || zip.touched)) }\\\">\\n          </div>\\n        </div>\\n      \\n    </article>\\n  </div>\\n  <!-- Payment -->\\n  <article class=\\\"card\\\" style=\\\"margin-top: 1em;\\\">\\n    <header class=\\\"card-header\\\">\\n      <h4 class=\\\"card-title mt-2\\\">Payment</h4>\\n    </header>\\n    <div class=\\\"alert\\\" role=\\\"alert\\\" *ngIf=\\\"isError\\\" [ngClass]=\\\"{'alert-danger' : (errorStatus === '500'), 'alert-warning' : (errorStatus !== '500')}\\\">\\n      <i class=\\\"icon ion-md-warning\\\"></i> <strong style=\\\"margin-left: 5px\\\">Error {{ errorStatus }}</strong>\\n      <p>{{ errorMessage }}</p>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"cardNumber\\\">Card number</label>\\n        <div class=\\\"input-group\\\">\\n          <div type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"\\\"\\n            style=\\\"border-right: none; padding: 0px  0px  0px 10px;\\\" id=\\\"card-element\\\"></div>\\n          <div class=\\\"input-group-append\\\">\\n            <span class=\\\"input-group-text\\\" style=\\\"border-left: none; background-color: #fff;\\\">\\n              <img src=\\\"https://img.icons8.com/color/48/000000/visa.png\\\" class=\\\"payment-card\\\">\\n              <img src=\\\"https://img.icons8.com/color/48/000000/mastercard.png\\\" class=\\\"payment-card\\\">\\n              <img src=\\\"https://img.icons8.com/color/48/000000/amex.png\\\" class=\\\"payment-card\\\">\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <button class=\\\"subscribe btn btn-success btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"isProcessing\\\">\\n        <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"isProcessing\\\"></span>\\n        <span *ngIf=\\\"!isProcessing\\\">Place Order</span>\\n      </button>\\n    </div>\\n  </article>\\n</form>\\n<!-- Success -->\\n<app-success *ngIf=\\\"paymentFinished\\\" [formModel]=\\\"formModel\\\"></app-success>\"","module.exports = \"<!-- <div class=\\\"row card-deck\\\">\\n  <div class=\\\"col-lg-4 col-md-6 mb-4\\\" *ngFor=\\\"let order of productOrders\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4>{{order.product.name}}</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <a href=\\\"#\\\"><img class=\\\"card-img-top\\\" src={{order.product.pictureUrl}} alt=\\\"\\\"></a>\\n        <h5 class=\\\"card-title\\\">${{order.product.price}}</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=order.quantity>\\n          </div>\\n          <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addToCart(order)\\\" [disabled]=\\\"order.quantity <= 0\\\">Add To Cart\\n            </button>\\n          </div>\\n          <div class=\\\"col-12\\\" *ngIf=\\\"isProductSelected(order.product)\\\">\\n            <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"removeFromCart(order)\\\">Remove From Cart\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"row card-deck\\\" style=\\\"\\\">\\n  <div class=\\\"col-lg-12 col-md-6 mb-4\\\" *ngFor=\\\"let order of productOrders\\\">\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"row no-gutters\\\">\\n        <aside class=\\\"col-sm-5 justify-content-center border-right\\\">\\n          <article class=\\\"gallery-wrap\\\">\\n            <div class=\\\"img-big-wrap\\\">\\n              <img style=\\\"\\\" src={{order.product.pictureUrl}}>\\n            </div>\\n          </article>\\n          \\n        </aside>\\n        <aside class=\\\"col-sm-7\\\">\\n          <article class=\\\"p-5\\\">\\n            <h3 class=\\\"title mb-3\\\">{{ order.product.name }}</h3>\\n            <div class=\\\"mb-3\\\">\\n              <var class=\\\"price h3\\\" style=\\\"color: #F57C00\\\">\\n                <span class=\\\"currency\\\">€</span><span class=\\\"num\\\">{{ order.product.price }}</span>\\n              </var>\\n              <span></span>\\n            </div> <!-- price-detail-wrap .// -->\\n            <dl>\\n              <dt>Description</dt>\\n              <dd>\\n                <p>{{ order.product.description }}</p>\\n              </dd>\\n            </dl>\\n            <dl class=\\\"row\\\">\\n              <dt class=\\\"col-sm-3\\\">Model#</dt>\\n              <dd class=\\\"col-sm-9\\\">{{ order.product.id }}</dd>\\n\\n              <dt class=\\\"col-sm-3\\\">Brand</dt>\\n              <dd class=\\\"col-sm-9\\\">{{ order.product.brand }}</dd>\\n\\n              <dt class=\\\"col-sm-3\\\">Colour</dt>\\n              <dd class=\\\"col-sm-9\\\">{{ order.product.colour }}</dd>\\n\\n            </dl>\\n            <div class=\\\"rating-wrap\\\">\\n\\n              <ul class=\\\"rating-stars\\\" style=\\\"padding-right: 10px;\\\">\\n                <li style=\\\"width:80%\\\" class=\\\"stars-active\\\">\\n                  <i class=\\\"fa fa-star\\\"></i> <i class=\\\"fa fa-star\\\"></i>\\n                  <i class=\\\"fa fa-star\\\"></i> <i class=\\\"fa fa-star\\\"></i>\\n                  <i class=\\\"fa fa-star\\\"></i>\\n                </li>\\n                <li>\\n                  <i class=\\\"fa fa-star\\\"></i> <i class=\\\"fa fa-star\\\"></i>\\n                  <i class=\\\"fa fa-star\\\"></i> <i class=\\\"fa fa-star\\\"></i>\\n                  <i class=\\\"fa fa-star\\\"></i>\\n                </li>\\n              </ul>\\n              <div class=\\\"label-rating\\\">132 reviews</div>\\n            </div> <!-- rating-wrap.// -->\\n            <hr>\\n            <div class=\\\"row\\\">\\n              \\n              <div class=\\\"col-sm-5\\\">\\n                <dl class=\\\"dlist-inline\\\">\\n                  <dt style=\\\"padding-right: 10px;\\\">Quantity: </dt>\\n                  <dd>\\n                    <select class=\\\"form-control form-control-sm\\\" style=\\\"width:70px;\\\" [(ngModel)]=order.quantity>\\n                      <option selected=\\\"selected\\\" [value]=1> 1 </option>\\n                      <option [value]=2> 2 </option>\\n                      <option [value]=3> 3 </option>\\n                    </select>\\n                  </dd>\\n                </dl> <!-- item-property .// -->\\n              </div> <!-- col.// -->\\n              <div class=\\\"col-sm-7\\\" *ngIf=\\\"order.product.category === 'CLOTHES'\\\">\\n                <dl class=\\\"dlist-inline\\\">\\n                  <dt style=\\\"padding-right: 10px;\\\">Size: </dt>\\n                  <dd>\\n                    <form>\\n                        <label class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineRadio2\\\"\\n                              value=\\\"SM\\\" [(ngModel)]=order.size [ngClass]=\\\"{'is-invalid' : isInvalid }\\\">\\n                            <span class=\\\"form-check-label\\\">SM</span>\\n                          </label>\\n                          <label class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineRadio2\\\"\\n                            value=\\\"MD\\\" [(ngModel)]=order.size [ngClass]=\\\"{'is-invalid' : isInvalid }\\\">\\n                            <span class=\\\"form-check-label\\\">MD</span>\\n                          </label>\\n                          <label class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineRadio2\\\"\\n                            value=\\\"LG\\\" [(ngModel)]=order.size [ngClass]=\\\"{'is-invalid' : isInvalid }\\\">\\n                            <span class=\\\"form-check-label\\\">LG</span>\\n                          </label>\\n                    </form>\\n                  </dd>\\n                </dl>\\n              </div>\\n\\n              <div class=\\\"col-sm-7\\\" *ngIf=\\\"order.product.category === 'SHOES'\\\">\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid\\\">Please select a size.</div>\\n                  <dl class=\\\"dlist-inline\\\">\\n                    <dt style=\\\"padding-right: 10px;\\\">Size:</dt>\\n                    <dd>\\n                      <select class=\\\"form-control form-control-sm\\\" style=\\\"width:80px;\\\"\\n                        [ngClass]=\\\"{'is-invalid' : isInvalid }\\\" [(ngModel)]=order.size>\\n                        <option selected=\\\"selected\\\" [value]=9>9</option>\\n                        <option [value]=9.5>9.5</option>\\n                        <option [value]=10>10</option>\\n                        <option [value]=10.5>10.5</option>\\n                        <option [value]=11>11</option>\\n                        <option [value]=11.5>11.5</option>\\n                        <option [value]=12>12</option>\\n                      </select>\\n                    </dd>\\n                  </dl>\\n                </div>\\n              \\n            </div>\\n            <hr>\\n            <a class=\\\"btn btn-primary\\\" style=\\\"margin-right: 10px; color: #fff\\\" (click)=\\\"addToCartAndFinishOrder(order)\\\"> Buy now </a>\\n            <a class=\\\"btn btn-outline-primary\\\" (click)=\\\"addToCart(order)\\\" style=\\\"color: #007bff\\\"> <i class=\\\"fas fa-shopping-cart\\\"></i> Add to cart </a>\\n          </article>\\n        </aside>\\n      </div>\\n    </div>\\n  </div>\\n  <div #divToScroll></div>\\n</div>\\n\\n\"","module.exports = \"<!-- <div class=\\\"card text-white bg-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n    <div class=\\\"card-header text-center\\\">Shopping Cart</div>\\n    <div class=\\\"card-body\\\">\\n        <p>Shopping-cart component</p>\\n        <h5 class=\\\"card-title\\\">Total: ${{total}}</h5>\\n        <hr>\\n        <h6 class=\\\"card-title\\\">Items bought:</h6>\\n\\n        <ul>\\n            <li *ngFor=\\\"let order of orders.productOrders\\\">\\n                {{ order.product.name }} - {{ order.quantity}} pcs.\\n            </li>\\n        </ul>\\n\\n        <button class=\\\"btn btn-light btn-block\\\" (click)=\\\"finishOrder()\\\"\\n                [disabled]=\\\"orders.productOrders.length == 0\\\">Checkout\\n        </button>\\n    </div>\\n</div> -->\\n\\n<div *ngIf=\\\"!(orders.productOrders.length == 0)\\\" style=\\\"padding-bottom: 50px;\\\" id=\\\"shoppingCart\\\">\\n    <h2 class=\\\"title-doc\\\">Your Order</h2>\\n    <div class=\\\"card\\\" #shoppingCart>\\n            <table class=\\\"table table-hover shopping-cart-wrap\\\">\\n              <thead class=\\\"text-muted\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Product</th>\\n                  <th scope=\\\"col\\\" width=\\\"120\\\">Quantity</th>\\n                  <th scope=\\\"col\\\" width=\\\"120\\\">Price</th>\\n                  <th scope=\\\"col\\\" width=\\\"200\\\" class=\\\"text-right\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let order of orders.productOrders\\\">\\n                  <td>\\n                    <figure class=\\\"media\\\">\\n                      <div class=\\\"img-wrap\\\"><img src={{order.product.pictureUrl}} class=\\\"img-thumbnail img-sm\\\"></div>\\n                      <figcaption class=\\\"media-body\\\">\\n                        <h6 class=\\\"title text-truncate\\\"> {{ order.product.name }} </h6>\\n                        <dl class=\\\"dlist-inline small\\\" *ngIf=\\\"order.size !== 'N/A'\\\">\\n                          <dt style=\\\"padding-right: 5px;\\\">Size:</dt>\\n                          <dd>{{ order.size }}</dd>\\n                        </dl>\\n                        <dl class=\\\"dlist-inline small\\\">\\n                          <dt style=\\\"padding-right: 5px;\\\">Colour:</dt>\\n                          <dd>{{ order.product.colour }}</dd>\\n                        </dl>\\n                      </figcaption>\\n                    </figure>\\n                  </td>\\n                  <td>\\n                      <span> {{ order.quantity}} </span>\\n                  </td>\\n                  <td>\\n                    <div class=\\\"price-wrap\\\">\\n                      <var class=\\\"price\\\">€{{ order.product.price * order.quantity }}</var>\\n                      <small class=\\\"text-muted\\\" *ngIf=\\\"(order.quantity > 1)\\\">(€{{ order.product.price }} each)</small>\\n                    </div> <!-- price-wrap .// -->\\n                  </td>\\n                  <td class=\\\"text-right\\\">\\n                    <a class=\\\"btn btn-outline-danger\\\" (click)=\\\"removeFromCart(order)\\\" style=\\\"color: #dc3545; border-radius: 25px;\\\"> × Remove </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"box\\\">\\n              <dl class=\\\"dlist-align\\\">\\n                  <dt>Total cost: </dt>\\n                  <dd class=\\\"text-right h5 b\\\" > €{{total}} </dd>\\n              </dl>\\n              <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"finishOrder()\\\" [disabled]=\\\"orders.productOrders.length == 0\\\">Proceed to Checkout</button>\\n                </div>\\n              </div>\\n              </div>\\n          </div>\\n</div>\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-top: 1em;\\\">\\n        <div id=\\\"stepper1\\\" class=\\\"bs-stepper\\\">\\n          <div class=\\\"bs-stepper-header\\\">\\n            <div class=\\\"step\\\">\\n              <button class=\\\"step-trigger\\\" (click)=\\\"returnToStore()\\\" [disabled]=\\\"shopDisabled\\\">\\n                <span class=\\\"bs-stepper-circle\\\" [ngClass]=\\\"{'stepper-active' : (step === 1) }\\\">1</span>\\n                <span class=\\\"bs-stepper-label\\\" [ngClass]=\\\"{'stepper-text-active' : (step === 1) }\\\">Store</span>\\n              </button>\\n            </div>\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"step\\\">\\n              <button class=\\\"step-trigger\\\" (click)=\\\"returnToCheckout()\\\" [disabled]=\\\"!checkoutVisited\\\">\\n                <span class=\\\"bs-stepper-circle\\\" [ngClass]=\\\"{'stepper-active' : (step === 2) }\\\">2</span>\\n                <span class=\\\"bs-stepper-label\\\" [ngClass]=\\\"{'stepper-text-active' : (step === 2) }\\\">Checkout</span>\\n              </button>\\n            </div>\\n            <div class=\\\"line\\\"></div>\\n            <div class=\\\"step\\\">\\n              <button class=\\\"step-trigger\\\" [disabled]=\\\"step !== 4\\\">\\n                <span class=\\\"bs-stepper-circle\\\" [ngClass]=\\\"{'stepper-active' : (step === 4) }\\\">3</span>\\n                <span class=\\\"bs-stepper-label\\\" [ngClass]=\\\"{'stepper-text-active' : (step === 4) }\\\">Confirmation</span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \"","module.exports = \"<section>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12 text-center\\\">\\n                    <i class=\\\"icon ion-md-checkmark-circle-outline\\\" style=\\\"font-size: 64px; color: #4CAF50\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12\\\">\\n                    <h2 class=\\\"title-doc\\\">Thank you for your purchase!</h2>\\n                    <p>You will receive an order confirmation email at <strong>{{ formModel.email }}</strong> with details of your order.</p>\\n                    <p>Your order # is: <strong>{{ formModel.id }}</strong></p>\\n                    <a class=\\\"btn btn-primary\\\" style=\\\"margin-top: 6em; color: #fff\\\" (click)=\\\"refresh()\\\"> <i class=\\\"fas fa-shopping-cart\\\"></i> Continue Shopping </a>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './ecommerce/orders/orders.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\nimport { BillingComponent } from './ecommerce/billing/billing.component';\nimport { PaymentComponent } from './ecommerce/payment/payment.component';\n\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { StepperComponent } from './ecommerce/stepper/stepper.component';\nimport { StepperService } from './ecommerce/services/StepperService';\nimport { SuccessComponent } from './ecommerce/success/success.component';\n\nconst appRoutes: Routes = [\n    {\n      path: '',\n      component: EcommerceComponent,\n    },\n];\n  \n\n@NgModule({\n    declarations: [\n        AppComponent,\n        EcommerceComponent,\n        ProductsComponent,\n        ShoppingCartComponent,\n        OrdersComponent,\n        BillingComponent,\n        PaymentComponent,\n        StepperComponent,\n        SuccessComponent,\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forRoot(\n            appRoutes,\n            { enableTracing: false }\n        ),\n        NgxStripeModule.forChild('pk_test_LYR0rKmCAwHjTuMjvGnz8jQ000088t2byd')\n    ],\n    providers: [EcommerceService, StepperService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9iaWxsaW5nL2JpbGxpbmcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.component.html',\n  styleUrls: ['./billing.component.css']\n})\nexport class BillingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9lY29tbWVyY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ProductsComponent } from './products/products.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { EcommerceService } from './services/EcommerceService';\nimport { Subscription } from 'rxjs';\nimport { StepperService } from './services/StepperService';\n\n@Component({\n  selector: 'app-ecommerce',\n  templateUrl: './ecommerce.component.html',\n  styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit, AfterViewInit {\n\n  private collapsed = true;\n  orderFinished = false;\n  sub: Subscription;\n\n  @ViewChild('productsC', { read: true, static: false })\n  productsC: ProductsComponent;\n\n  @ViewChild('shoppingCartC', { read: true, static: false })\n  shoppingCartC: ShoppingCartComponent;\n\n  @ViewChild('shoppingCartC', { read: true, static: false }) shoppingCartEl: ElementRef;\n\n  @ViewChild('ordersC', { read: true, static: false })\n  ordersC: OrdersComponent;\n\n  toggleCollapsed():void {\n    this.collapsed = !this.collapsed;\n  }\n\n  finishOrder(orderFinished: boolean) {\n    // this.orderFinished = orderFinished;\n    this.ecommerceService.OrderFinished = orderFinished;\n    this.orderFinished = this.ecommerceService.OrderFinished;\n\n    this.stepperService.Step = 2;\n    this.stepperService.visitCheckout();\n  }\n\n  reset() {\n    this.orderFinished = false;\n    this.productsC.reset();\n    this.shoppingCartC.reset();\n    this.ordersC.paid = false;\n  }\n\n  constructor(private ecommerceService: EcommerceService, private stepperService: StepperService) { }\n\n  ngOnInit() {\n    this.sub = this.ecommerceService.OrderFinishedChanged.subscribe(() => {\n      this.orderFinished = this.ecommerceService.OrderFinished;\n    });\n  }\n\n  ngAfterViewInit() {\n    \n    // this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n    //   console.log('Eccomerce component ... ordersChanged event');\n    //   console.log(this.shoppingCartEl.nativeElement);\n    //   this.shoppingCartEl.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    // });\n  }\n\n\n\n}\n","import { Product } from './product.model';\r\n\r\nexport class ProductOrder {\r\n    product: Product;\r\n    quantity: number;\r\n    size: string;\r\n\r\n    constructor(product: Product, quantity: number, size: string) {\r\n        this.product = product;\r\n        this.quantity = quantity;\r\n        this.size = size;\r\n    }\r\n}","import { ProductOrder } from './product-order.model';\r\n\r\nexport class ProductOrders {\r\n    productOrders: ProductOrder[] = [];\r\n}","export class Product {\r\n    id: number;\r\n    name: string;\r\n    price: number;\r\n    pictureUrl: string;\r\n    category: string;\r\n\r\n    constructor(id: number, name: string, price: number, pictureUrl: string, category: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.price = price;\r\n        this.pictureUrl = pictureUrl;\r\n        this.category = category;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9vcmRlcnMvb3JkZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n    orders: ProductOrders;\n    total: number;\n    paid: boolean;\n    sub: Subscription;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.orders = this.ecommerceService.ProductOrders;\n    }\n\n    ngOnInit() {\n        this.paid = false;\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.orders = this.ecommerceService.ProductOrders;\n        });\n        this.loadTotal();\n    }\n\n    pay() {\n        this.paid = true;\n        // this.ecommerceService.saveOrder(this.orders).subscribe();\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n            this.total = this.ecommerceService.Total;\n        });\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions, CardDataOptions } from 'ngx-stripe';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { StepperService } from '../services/StepperService';\nimport { EcommerceService } from '../services/EcommerceService';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit, AfterViewInit, OnDestroy {\n  elements: Elements;\n  card: StripeElement;\n\n  stripeTest: FormGroup;\n  fname: FormControl;\n  lname: FormControl;\n  email: FormControl;\n  address: FormControl;\n  city: FormControl;\n  zip: FormControl;\n  country: FormControl;\n\n  isProcessing: boolean = false;\n  isError: boolean = false;\n  errorMessage: string;\n  errorStatus: string;\n\n  formModel: any;\n\n  paymentFinished: boolean = false;\n\n  constructor(private fb: FormBuilder, \n    private stripeService: StripeService, \n    private stepperService: StepperService, \n    private ecommerceService: EcommerceService) { }\n\n  ngOnInit() {\n    this.fname = new FormControl('', Validators.required);\n    this.lname = new FormControl('', Validators.required);\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.address = new FormControl('', Validators.required);\n    this.city = new FormControl('', Validators.required);\n    this.zip = new FormControl('');\n    this.country = new FormControl('', Validators.required);\n\n    this.stripeTest = this.fb.group({\n      fname: this.fname,\n      lname: this.lname,\n      email: this.email,\n      address: this.address,\n      city: this.city,\n      zip: this.zip,\n      country: this.country,\n    });\n\n    this.stripeService.elements().subscribe(elements => {\n      this.elements = elements;\n\n      if (!this.card) {\n        this.card = this.elements.create('card', {\n          hidePostalCode: true,\n          style: {\n            base: {\n              iconColor: '#666EE8',\n              color: '#31325F',\n              lineHeight: '40px',\n              fontWeight: 300,\n              fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n              fontSize: '1rem',\n              '::placeholder': {\n                color: '#CFD7E0'\n              }\n            }\n          }\n        });\n        this.card.mount('#card-element');\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  checkout() {\n    if (this.stripeTest.status === 'INVALID') {\n      return;\n    }\n    // Disable form and Stepper state 3: User cannot modify order.\n    this.isProcessing = true;\n    this.stripeTest.disable();\n    this.stepperService.Step = 3;\n\n    // TokenData from Stripe API.\n    const name = `${this.stripeTest.get('fname').value} ${this.stripeTest.get('lname').value}`;\n    const tokenData:CardDataOptions = {\n      name,\n      address_line1: this.stripeTest.get('address').value,\n      address_line2: '',\n      address_state: '',\n      address_city: this.stripeTest.get('city').value,\n      address_zip: this.stripeTest.get('zip').value,\n      address_country: '',\n    };\n\n    this.stripeService.createToken(this.card, tokenData).subscribe(result => {\n      if (result.error) {\n        throw new Error(result.error.message);\n      }\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.token = result.token.id;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.firstName = this.stripeTest.get('fname').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.lastName = this.stripeTest.get('lname').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.email = this.stripeTest.get('email').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.address = this.stripeTest.get('address').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.city = this.stripeTest.get('city').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.country = this.stripeTest.get('country').value;\n      // @ts-ignore\n      this.ecommerceService.ProductOrders.zip = this.stripeTest.get('zip').value;\n\n      this.formModel = this.stripeTest.getRawValue();\n\n      const res = this.ecommerceService.saveOrder(this.ecommerceService.ProductOrders);\n      res.then(res => {\n        // @ts-ignore\n        this.formModel.id = res.id;\n        this.stepperService.Step = 4;\n        this.paymentFinished = true;\n      }, error => {\n        this.handleError(error);\n      });\n    });\n  }\n\n  handleError(error: any) {\n    this.isError = true;\n    let message = error.error.message;\n    message = message.split(';');\n    this.errorMessage = message[0];\n    this.errorStatus = error.status;\n    if (this.errorStatus !== '500') {\n      this.isProcessing = false;\n      this.stripeTest.enable();\n      this.stepperService.Step = 2;\n    }\n  }\n\n}\n","module.exports = \".padding-0 {\\r\\n    padding-right: 0;\\r\\n    padding-left: 1;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.img-wrap {\\r\\n    border-radius: 0.2rem 0.2rem 0 0;\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n    height: 220px;\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWNvbW1lcmNlL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjs7OztBQUlBO0lBQ0ksZ0NBQWdDO0lBQ2hDLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9wcm9kdWN0cy9wcm9kdWN0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZGRpbmctMCB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxO1xyXG59XHJcblxyXG5cclxuXHJcbi5pbWctd3JhcCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjJyZW0gMC4ycmVtIDAgMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDIyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ProductOrder } from '../models/product-order.model';\nimport { Product } from '../models/product.model';\nimport { ProductOrders } from '../models/product-orders.model';\nimport { Subscription } from 'rxjs';\nimport { EcommerceService } from '../services/EcommerceService';\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit, AfterViewInit {\n\n  productOrders: ProductOrder[] = [];\n  products: Product[] = [];\n  selectedProductOrder: ProductOrder;\n  private shoppingCartOrders: ProductOrders;\n  sub: Subscription;\n  productSelected: boolean = false;\n\n  isInvalid: boolean = false;\n\n  orderFinished: boolean;\n  @Output() onOrderFinished: EventEmitter<boolean>;\n\n  @ViewChild('divToScroll', { read: true, static: false }) divToScroll: ElementRef;\n  \n  constructor(private ecommerceService: EcommerceService) { \n    this.onOrderFinished = new EventEmitter<boolean>();\n  }\n\n  ngOnInit() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.loadOrders();\n  }\n\n  ngAfterViewInit() {\n    \n  }\n\n  addToCart(order: ProductOrder) {\n    if (order.quantity === 0) {\n      order.quantity = 1;\n    }\n    \n    if (order.product.category === 'SHOES' && order.size === 'N/A') {\n      this.isInvalid = true;\n      return;\n    }\n\n    if (order.product.category === 'CLOTHES' && order.size === 'N/A') {\n      this.isInvalid = true;\n      return;\n    }\n\n    this.isInvalid = false;\n\n    if (this.ecommerceService.ProductOrders.productOrders.length === 0) {\n      this.addToCartService(order);\n    } else {\n      this.checkDuplicates(order);\n    }\n\n    // document.getElementById('bottom').scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  addToCartService(order: ProductOrder) {\n    this.ecommerceService.SelectedProductOrder = order;\n    this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n    this.productSelected = true;\n  }\n\n  checkDuplicates(order: ProductOrder) {\n    this.ecommerceService.ProductOrders.productOrders.forEach((item) => {\n      if (item.product.id === order.product.id) {\n        this.shoppingCartOrders.productOrders.splice(this.getProductIndex(item.product), 1);\n      }\n    });\n\n    this.addToCartService(order);\n  }\n\n  removeFromCart(productOrder: ProductOrder) {\n    let index = this.getProductIndex(productOrder.product);\n    if (index > 1) {\n      this.shoppingCartOrders.productOrders.splice(this.getProductIndex(productOrder.product), 1);\n    }\n    this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n    this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n    this.productSelected = false;\n  }\n\n  getProductIndex(product: Product):number {\n    return this.ecommerceService.ProductOrders.productOrders.findIndex(value => value.product === product);\n  }\n\n  isProductSelected(product: Product):boolean {\n    return this.getProductIndex(product) > -1;\n  }\n\n  loadProducts() {\n    this.ecommerceService.getAllProducts().subscribe(\n      (products: any[]) => {\n        this.products = products;\n        this.products.forEach(product => {\n          this.productOrders.push(new ProductOrder(product, 0, 'N/A'));\n        })\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadOrders() {\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n      this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n      console.log('orders changed from ProductsComponent')\n      console.log(this.shoppingCartOrders)\n    });\n  }\n\n  reset() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.ecommerceService.ProductOrders.productOrders = [];\n    this.loadOrders();\n    this.productSelected = false;\n  }\n\n  scroll(element: any) {\n    element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  addToCartAndFinishOrder(order: ProductOrder) {\n    this.addToCart(order);\n    if (!this.isInvalid) {\n      this.orderFinished = true;\n      this.ecommerceService.Total = this.calculateTotal(this.ecommerceService.ProductOrders.productOrders);\n      this.onOrderFinished.emit(this.orderFinished);\n    }\n  }\n\n  private calculateTotal(products: ProductOrder[]):number {\n    let sum = 0;\n    products.forEach(value => {\n      sum += (value.product.price * value.quantity);\n    });\n\n    return sum;\n  }\n\n}\n","import { ProductOrder } from '../models/product-order.model';\r\nimport { ProductOrders } from '../models/product-orders.model';\r\n\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EcommerceService {\r\n\r\n    private productsUrl = \"/api/products\";\r\n    private ordersUrl = \"/api/orders\";\r\n\r\n    private productOrder: ProductOrder;\r\n    private orders:ProductOrders = new ProductOrders();\r\n\r\n    private productOrderSubject = new Subject();\r\n    private ordersSubject = new Subject();\r\n    private totalSubject = new Subject();\r\n    private orderFinishedSubject = new Subject();\r\n\r\n    private total: number;\r\n\r\n    // Used to toggle between Shop --> Checkout pages.\r\n    private orderFinished:boolean = false;\r\n\r\n    ProductOrderChanged = this.productOrderSubject.asObservable();\r\n    OrdersChanged = this.ordersSubject.asObservable();\r\n    TotalChanged = this.totalSubject.asObservable();\r\n    OrderFinishedChanged = this.orderFinishedSubject.asObservable();\r\n\r\n    constructor(private http:HttpClient) {\r\n\r\n    }\r\n\r\n    getAllProducts() {\r\n        return this.http.get(this.productsUrl);\r\n    }\r\n\r\n    saveOrder(order: ProductOrders) {\r\n        return this.http.post(this.ordersUrl, order).toPromise();\r\n    }\r\n\r\n    set SelectedProductOrder(value: ProductOrder) {\r\n        this.productOrder = value;\r\n        this.productOrderSubject.next();\r\n    }\r\n\r\n    get SelectedProductOrder() {\r\n        return this.productOrder;\r\n    }\r\n\r\n    set ProductOrders(value: ProductOrders) {\r\n        console.log(value.productOrders)\r\n        this.orders = value;\r\n        this.ordersSubject.next();\r\n    }\r\n\r\n    get ProductOrders() {\r\n        return this.orders;\r\n    }\r\n\r\n    get Total() {\r\n        return this.total;\r\n    }\r\n\r\n    set Total(value: number) {\r\n        this.total = value;\r\n        this.totalSubject.next();\r\n    }\r\n\r\n    set OrderFinished(value: boolean) {\r\n        this.orderFinished = value;\r\n        this.orderFinishedSubject.next();\r\n    }\r\n\r\n    get OrderFinished() {\r\n        return this.orderFinished;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class StepperService {\r\n\r\n    private step:number = 1;\r\n    private checkoutVisited:boolean = false;\r\n    private shopDisabled:boolean = false;\r\n    \r\n    private stepSubject = new Subject();\r\n    private shopDisabledSubject = new Subject();\r\n\r\n    StepChanged = this.stepSubject.asObservable();\r\n    ShopDisabledChanged = this.shopDisabledSubject.asObservable();\r\n\r\n    set Step(step: number) {\r\n        this.step = step;\r\n        this.stepSubject.next();\r\n    }\r\n\r\n    get Step():number {\r\n        return this.step;\r\n    }\r\n\r\n    visitCheckout() {\r\n        this.checkoutVisited = true;\r\n    }\r\n\r\n    // disableShop() {\r\n    //     this.shopDisabled = true;\r\n    // }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9zaG9wcGluZy1jYXJ0L3Nob3BwaW5nLWNhcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy, Output, AfterViewInit } from '@angular/core';\nimport { ProductOrders } from '../models/product-orders.model';\nimport { Product } from '../models/product.model';\nimport { Subscription } from 'rxjs';\nimport { EventEmitter } from '@angular/core';\nimport { EcommerceService } from '../services/EcommerceService';\nimport { ProductOrder } from '../models/product-order.model';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy, AfterViewInit {\n  orderFinished: boolean;\n  orders: ProductOrders;\n  total: number;\n  sub: Subscription;\n\n  @Output() onOrderFinished: EventEmitter<boolean>;\n\n  constructor(private ecommerceService: EcommerceService) {\n    this.total = 0;\n    this.orderFinished = false;\n    this.onOrderFinished = new EventEmitter<boolean>();\n  }\n\n  ngOnInit() {\n    this.orders = new ProductOrders();\n    this.loadCart();\n    this.loadTotal();\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  ngAfterViewInit() {\n    // Auto-scroll to shopping-cart.\n      this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n        if (this.ecommerceService.ProductOrders.productOrders.length > 1) {\n          return;\n        } else {\n          setTimeout(() => {\n            window.scrollBy({\n              top: window.innerHeight * 4,\n              left: 0,\n              behavior: 'smooth'\n            });\n          }, 250)\n        }\n    });\n  }\n\n  private calculateTotal(products: ProductOrder[]):number {\n    let sum = 0;\n    products.forEach(value => {\n      sum += (value.product.price * value.quantity);\n    });\n\n    return sum;\n  }\n\n  loadTotal() {\n    this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n      console.log('orders changed from ShoppingCartComponent')\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  finishOrder() {\n    this.orderFinished = true;\n    this.ecommerceService.Total = this.total;\n    this.onOrderFinished.emit(this.orderFinished);\n  }\n\n  loadCart() {\n    this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n      let productOrder = this.ecommerceService.SelectedProductOrder;\n      if (productOrder) {\n        this.orders.productOrders.push(new ProductOrder(productOrder.product, productOrder.quantity, productOrder.size));\n      }\n      this.ecommerceService.ProductOrders = this.orders;\n      this.orders = this.ecommerceService.ProductOrders;\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  removeFromCart(order: ProductOrder) {\n    console.log(order);\n    let index = this.getProductIndex(order.product);\n    console.log(index);\n\n    if (index > -1) {\n      this.ecommerceService.ProductOrders.productOrders.splice(index, 1);\n    }\n\n    this.total = this.calculateTotal(this.orders.productOrders);\n\n  }\n\n  getProductIndex(product: Product):number {\n    return this.ecommerceService.ProductOrders.productOrders.findIndex(value => value.product === product);\n  }\n\n\n    reset() {\n      this.orderFinished = false;\n      this.orders = new ProductOrders();\n      this.orders.productOrders = [];\n      this.loadTotal();\n      this.total = 0;\n    }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9zdGVwcGVyL3N0ZXBwZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StepperService } from '../services/StepperService';\nimport { Subscription } from 'rxjs';\nimport { EcommerceService } from '../services/EcommerceService';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.css']\n})\nexport class StepperComponent implements OnInit {\n\n  private step: number;\n  private checkoutVisited: boolean;\n  private shopDisabled: boolean;\n\n  private sub: Subscription;\n  private disableSub: Subscription;\n\n  constructor(private stepperService:StepperService, private ecommerceService:EcommerceService) { }\n\n  ngOnInit() {\n    this.step = this.stepperService.Step;\n    this.checkoutVisited = false;\n\n    this.sub = this.stepperService.StepChanged.subscribe(() => {\n      this.step = this.stepperService.Step;\n      if (this.step === 2) {\n        this.checkoutVisited = true;\n      }\n\n      if (this.step === 3) {\n        this.checkoutVisited = false;\n        this.shopDisabled = true;\n      }\n    });\n  }\n\n  returnToStore() {\n    if (this.checkoutVisited) {\n      this.stepperService.Step = 1;\n      this.ecommerceService.OrderFinished = false;\n    }\n  }\n\n  returnToCheckout() {\n    if (this.checkoutVisited) {\n      this.ecommerceService.OrderFinished = true;\n      this.stepperService.Step = 2;\n    }\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vjb21tZXJjZS9zdWNjZXNzL3N1Y2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  @Input() formModel: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}